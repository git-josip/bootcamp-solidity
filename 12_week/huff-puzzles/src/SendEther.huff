 
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `sendEther(address)` to
 *  transfer the value sent with the call to the address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function sendEther(address) payable returns()


 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload   //load 32 bytes of calldata
    0xe0 shr            //shift right for 28bytes

    __FUNC_SIG(sendEther) eq sendEther jumpi //check is function matchin our sendEther function
    0x00 0x00 revert

    sendEther:
        SENDETHER()
 }

 #define macro SENDETHER() = takes(0) returns(0) {
    0x00 dup1 dup1 dup1                 // [0, 0, 0, 0] this is preparation for 
                                        // CALL opcode args; gas address, value, argsOffset, argsSize, retOffset, retSize 
    callvalue 0x04 calldataload gas     // [gas, address, msg.value, 0, 0, 0, 0]
    call                                // make call to address
    0x00 0x00 return                    // return
 }